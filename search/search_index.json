{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tarotpedia - Documentation","text":"<p>Tarotpedia is a numerology and Tarot reader powered by AI. It can help you to get tarot interpretations and numerology meanings.</p> <p>This documentation will guide you through the process of using the Tarotpedia API.</p>"},{"location":"#api-reference","title":"API Reference","text":""},{"location":"#predict-api","title":"Predict API","text":"<p>Predict API will help you to get tarot interpretations and numerology meanings.</p>"},{"location":"#tarot-cards-api","title":"Tarot Cards API","text":"<p>Tarot Cards API will help you to get random tarot cards with upright and reversed cards. Not random but calculated based on your numerology meaning (name, date of birth, question).</p>"},{"location":"predict/","title":"Predict API","text":"<p>Predict API will help you to get tarot interpretations and numerology meanings.</p>"},{"location":"predict/#api-endpoints-reference","title":"API Endpoints Reference","text":""},{"location":"predict/#index.predict_tarot_interpretations","title":"predict_tarot_interpretations  <code>async</code>","text":"<pre><code>predict_tarot_interpretations(request: TarotAPIRequest) -&gt; TarotAPIResponse\n</code></pre> Method Path Description <code>POST</code> <code>/predict/tarot-interpretations</code> Get tarot interpretations PARAMETER DESCRIPTION <code>request</code> <p>The request object containing the name, question, past_card, present_card, and future_card.</p> <p> TYPE: <code>TarotAPIRequest</code> </p> RETURNS DESCRIPTION <code>TarotAPIResponse</code> <p>The response object containing the name, question, and interpretations.</p> <p> TYPE: <code>TarotAPIResponse</code> </p> <p>Note</p> <p>This function uses the <code>TarotReader</code> module to get the tarot interpretations.</p> <p>Example Request</p> <pre><code>{\n    \"name\": \"John Doe\",\n    \"question\": \"Will my current love last forever?\",\n    \"past_card\": {\n        \"name\" : \"Chariot\",\n        \"is_upright\" : false\n    },\n    \"present_card\": {\n        \"name\" : \"The Fool\",\n        \"is_upright\" : true\n    },\n    \"future_card\": {\n        \"name\" : \"The Magician\",\n        \"is_upright\" : true\n    }\n}\n</code></pre> <p>Example Response</p> <pre><code>{\n    \"interpretations\": [\n        {\n            \"card_name\": \"Chariot (Reversed)\",\n            \"position\": \"past\",\n            \"orientation\": \"ureversed\",\n            \"meaning\": \"Past influence:...\",\n        },\n        {\n            \"card_name\": \"The Fool (Upright)\",\n            \"position\": \"present\",\n            \"orientation\": \"upright\",\n            \"meaning\": \"Present situation:...\",\n        },\n        {\n            \"card_name\": \"The Magician (Upright)\",\n            \"position\": \"future\",\n            \"orientation\": \"upright\",\n            \"meaning\": \"Future outlook:...\",\n        },\n    ],\n    \"summary\": \"...\"\n}\n</code></pre> Source code in <code>api/index.py</code> <pre><code>@app.post(\"/predict/tarot-interpretations\", response_model=TarotAPIResponse, tags=[\"Predict API\"])\nasync def predict_tarot_interpretations(request: TarotAPIRequest) -&gt; TarotAPIResponse:\n    \"\"\"\n    | Method | Path                             | Description                                       |\n    | ------ | -------------------------------- | ------------------------------------------------- |\n    | `POST` | `/predict/tarot-interpretations` | Get tarot interpretations\n\n    Params:\n        request (TarotAPIRequest): The request object containing the name, question, past_card, present_card, and future_card.\n\n    Returns:\n        TarotAPIResponse: The response object containing the name, question, and interpretations.\n\n    !!! note\n        This function uses the `TarotReader` module to get the tarot interpretations.\n\n    !!! example \"Example Request\"\n\n        ```json\n        {\n            \"name\": \"John Doe\",\n            \"question\": \"Will my current love last forever?\",\n            \"past_card\": {\n                \"name\" : \"Chariot\",\n                \"is_upright\" : false\n            },\n            \"present_card\": {\n                \"name\" : \"The Fool\",\n                \"is_upright\" : true\n            },\n            \"future_card\": {\n                \"name\" : \"The Magician\",\n                \"is_upright\" : true\n            }\n        }\n        ```\n\n    !!! example \"Example Response\"\n\n        ```json\n        {\n            \"interpretations\": [\n                {\n                    \"card_name\": \"Chariot (Reversed)\",\n                    \"position\": \"past\",\n                    \"orientation\": \"ureversed\",\n                    \"meaning\": \"Past influence:...\",\n                },\n                {\n                    \"card_name\": \"The Fool (Upright)\",\n                    \"position\": \"present\",\n                    \"orientation\": \"upright\",\n                    \"meaning\": \"Present situation:...\",\n                },\n                {\n                    \"card_name\": \"The Magician (Upright)\",\n                    \"position\": \"future\",\n                    \"orientation\": \"upright\",\n                    \"meaning\": \"Future outlook:...\",\n                },\n            ],\n            \"summary\": \"...\"\n        }\n        ```\n    \"\"\"\n    try:\n        interpretations, summary = await TAROT_READER.generate_reading(\n            name=request.name,\n            question=request.question,\n            past_card=request.past_card,\n            present_card=request.present_card,\n            future_card=request.future_card,\n        )\n\n        return TarotAPIResponse(\n            interpretations=interpretations,\n            summary=summary,\n        )\n\n    except HTTPException:\n        raise\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Internal Server Error: {str(e)}\")\n</code></pre>"},{"location":"predict/#index.predict_numerology_interpretations","title":"predict_numerology_interpretations  <code>async</code>","text":"<pre><code>predict_numerology_interpretations(request: NumerologyAPIRequest) -&gt; NumerologyAPIResponse\n</code></pre> Method Path Description <code>POST</code> <code>/predict/numerology-interpretations</code> Get numerology interpretations and meanings PARAMETER DESCRIPTION <code>request</code> <p>The request object containing the name, dob, and question.</p> <p> TYPE: <code>NumerologyAPIRequest</code> </p> RETURNS DESCRIPTION <code>NumerologyAPIResponse</code> <p>The response object containing the numerology meaning.</p> <p> TYPE: <code>NumerologyAPIResponse</code> </p> <p>Note</p> <p>This function uses the <code>NumerologyReader</code> module to get the numerology meaning.</p> <p>Example Request</p> <pre><code>{\n    \"name\": \"John Doe\",\n    \"dob\": \"1990-01-01\",\n    \"question\": \"Will my current love last forever?\"\n}\n</code></pre> <p>Example Response</p> <pre><code>{\n    \"numerology_meaning\": \"...\"\n}\n</code></pre> Source code in <code>api/index.py</code> <pre><code>@app.post(\"/predict/numerology-interpretations\", response_model=NumerologyAPIResponse, tags=[\"Predict API\"])\nasync def predict_numerology_interpretations(request: NumerologyAPIRequest) -&gt; NumerologyAPIResponse:\n    \"\"\"\n    | Method | Path                                  | Description                                 |\n    | ------ | ------------------------------------- | ------------------------------------------- |\n    | `POST` | `/predict/numerology-interpretations` | Get numerology interpretations and meanings |\n\n    Params:\n        request (NumerologyAPIRequest): The request object containing the name, dob, and question.\n\n    Returns:\n        NumerologyAPIResponse: The response object containing the numerology meaning.\n\n    !!! note\n        This function uses the `NumerologyReader` module to get the numerology meaning.\n\n    !!! example \"Example Request\"\n\n        ```json\n        {\n            \"name\": \"John Doe\",\n            \"dob\": \"1990-01-01\",\n            \"question\": \"Will my current love last forever?\"\n        }\n        ```\n\n    !!! example \"Example Response\"\n\n        ```json\n        {\n            \"numerology_meaning\": \"...\"\n        }\n        ```\n    \"\"\"\n    try:\n        numerology_meaning = await NUMEROLOGY_READER.analyze(\n            name=request.name,\n            dob=request.dob,\n            question=request.question,\n        )\n\n        return NumerologyAPIResponse(numerology_meaning=numerology_meaning)\n\n    except HTTPException:\n        raise\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Internal Server Error: {str(e)}\")\n</code></pre>"},{"location":"predict/#models-reference","title":"Models Reference","text":""},{"location":"predict/#models.TarotAPIRequest","title":"TarotAPIRequest  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TarotCard\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"is_upright\": {\n          \"title\": \"Is Upright\",\n          \"type\": \"boolean\"\n        },\n        \"image_url\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Image Url\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"is_upright\"\n      ],\n      \"title\": \"TarotCard\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"question\": {\n      \"title\": \"Question\",\n      \"type\": \"string\"\n    },\n    \"past_card\": {\n      \"$ref\": \"#/$defs/TarotCard\"\n    },\n    \"present_card\": {\n      \"$ref\": \"#/$defs/TarotCard\"\n    },\n    \"future_card\": {\n      \"$ref\": \"#/$defs/TarotCard\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"question\",\n    \"past_card\",\n    \"present_card\",\n    \"future_card\"\n  ],\n  \"title\": \"TarotAPIRequest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>question</code>                 (<code>str</code>)             </li> <li> <code>past_card</code>                 (<code>TarotCard</code>)             </li> <li> <code>present_card</code>                 (<code>TarotCard</code>)             </li> <li> <code>future_card</code>                 (<code>TarotCard</code>)             </li> </ul>"},{"location":"predict/#models.TarotAPIResponse","title":"TarotAPIResponse  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TarotInterpretation\": {\n      \"properties\": {\n        \"card_name\": {\n          \"title\": \"Card Name\",\n          \"type\": \"string\"\n        },\n        \"position\": {\n          \"enum\": [\n            \"past\",\n            \"present\",\n            \"future\"\n          ],\n          \"title\": \"Position\",\n          \"type\": \"string\"\n        },\n        \"orientation\": {\n          \"enum\": [\n            \"upright\",\n            \"reversed\"\n          ],\n          \"title\": \"Orientation\",\n          \"type\": \"string\"\n        },\n        \"meaning\": {\n          \"title\": \"Meaning\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"card_name\",\n        \"position\",\n        \"orientation\",\n        \"meaning\"\n      ],\n      \"title\": \"TarotInterpretation\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"interpretations\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TarotInterpretation\"\n      },\n      \"title\": \"Interpretations\",\n      \"type\": \"array\"\n    },\n    \"summary\": {\n      \"title\": \"Summary\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"interpretations\",\n    \"summary\"\n  ],\n  \"title\": \"TarotAPIResponse\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>interpretations</code>                 (<code>List[TarotInterpretation]</code>)             </li> <li> <code>summary</code>                 (<code>str</code>)             </li> </ul>"},{"location":"predict/#models.TarotCard","title":"TarotCard  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"is_upright\": {\n      \"title\": \"Is Upright\",\n      \"type\": \"boolean\"\n    },\n    \"image_url\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image Url\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"is_upright\"\n  ],\n  \"title\": \"TarotCard\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>is_upright</code>                 (<code>bool</code>)             </li> <li> <code>image_url</code>                 (<code>Optional[str]</code>)             </li> </ul>"},{"location":"predict/#models.TarotInterpretation","title":"TarotInterpretation  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"card_name\": {\n      \"title\": \"Card Name\",\n      \"type\": \"string\"\n    },\n    \"position\": {\n      \"enum\": [\n        \"past\",\n        \"present\",\n        \"future\"\n      ],\n      \"title\": \"Position\",\n      \"type\": \"string\"\n    },\n    \"orientation\": {\n      \"enum\": [\n        \"upright\",\n        \"reversed\"\n      ],\n      \"title\": \"Orientation\",\n      \"type\": \"string\"\n    },\n    \"meaning\": {\n      \"title\": \"Meaning\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"card_name\",\n    \"position\",\n    \"orientation\",\n    \"meaning\"\n  ],\n  \"title\": \"TarotInterpretation\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>card_name</code>                 (<code>str</code>)             </li> <li> <code>position</code>                 (<code>Literal['past', 'present', 'future']</code>)             </li> <li> <code>orientation</code>                 (<code>Literal['upright', 'reversed']</code>)             </li> <li> <code>meaning</code>                 (<code>str</code>)             </li> </ul>"},{"location":"predict/#models.NumerologyAPIRequest","title":"NumerologyAPIRequest  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"dob\": {\n      \"title\": \"Dob\",\n      \"type\": \"string\"\n    },\n    \"question\": {\n      \"title\": \"Question\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"dob\",\n    \"question\"\n  ],\n  \"title\": \"NumerologyAPIRequest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>dob</code>                 (<code>str</code>)             </li> <li> <code>question</code>                 (<code>str</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_dob_format</code>                 \u2192                   <code>dob</code> </li> </ul>"},{"location":"predict/#models.NumerologyAPIResponse","title":"NumerologyAPIResponse  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"numerology_meaning\": {\n      \"title\": \"Numerology Meaning\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"numerology_meaning\"\n  ],\n  \"title\": \"NumerologyAPIResponse\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>numerology_meaning</code>                 (<code>str</code>)             </li> </ul>"},{"location":"tarot-cards/","title":"Tarot Cards API","text":"<p>Tarot Cards API will help you to get random tarot cards with upright and reversed cards. Not random but calculated based on your numerology meaning (name, date of birth, question).</p>"},{"location":"tarot-cards/#api-endpoints-reference","title":"API Endpoints Reference","text":""},{"location":"tarot-cards/#index.draw_cards","title":"draw_cards  <code>async</code>","text":"<pre><code>draw_cards(request: CardsAPIRequest) -&gt; CardsAPIResponse\n</code></pre> Method Path Description <code>POST</code> <code>/tarot-cards/draw</code> Get shuffled tarot cards PARAMETER DESCRIPTION <code>request</code> <p>The request object containing the name, dob, and count.</p> <p> TYPE: <code>CardsAPIRequest</code> </p> RETURNS DESCRIPTION <code>CardsAPIResponse</code> <p>The response object containing the cards.</p> <p> TYPE: <code>CardsAPIResponse</code> </p> <p>Note</p> <p>This function uses the <code>get_shuffled_cards</code> function to get the shuffled tarot cards.</p> <p>Example Request</p> <pre><code>{\n    \"name\": \"John Doe\",\n    \"dob\": \"2000-01-01\",\n    \"count\": 5,\n    \"follow_numerology\": false\n}\n</code></pre> <p>Example Response</p> <pre><code>{\n    \"cards\": [\n        {\n            \"name\": \"Eight of Pentacles\",\n            \"is_upright\": false,\n            \"image_url\": \"/tarot-cards/images/72.jpg\",\n            \"full_card_name\": \"Eight of Pentacles (REVERSED)\"\n        },\n        {\n            \"name\": \"King of Cups\",\n            \"is_upright\": false,\n            \"image_url\": \"/tarot-cards/images/36.jpg\",\n            \"full_card_name\": \"King of Cups (REVERSED)\"\n        },\n        ...\n    ]\n}\n</code></pre> Source code in <code>api/index.py</code> <pre><code>@app.post(\"/tarot-cards/draw\", response_model=CardsAPIResponse, tags=[\"Tarot Cards API\"])\nasync def draw_cards(request: CardsAPIRequest) -&gt; CardsAPIResponse:\n    \"\"\"\n    | Method | Path                       | Description                                       |\n    | ------ | -------------------------- | ------------------------------------------------- |\n    | `POST` | `/tarot-cards/draw`        | Get shuffled tarot cards                          |\n\n    Params:\n        request (CardsAPIRequest): The request object containing the name, dob, and count.\n\n    Returns:\n        CardsAPIResponse: The response object containing the cards.\n\n    !!! note\n        This function uses the `get_shuffled_cards` function to get the shuffled tarot cards.\n\n    !!! example \"Example Request\"\n\n        ```json\n        {\n            \"name\": \"John Doe\",\n            \"dob\": \"2000-01-01\",\n            \"count\": 5,\n            \"follow_numerology\": false\n        }\n        ```\n\n    !!! example \"Example Response\"\n\n        ```json\n        {\n            \"cards\": [\n                {\n                    \"name\": \"Eight of Pentacles\",\n                    \"is_upright\": false,\n                    \"image_url\": \"/tarot-cards/images/72.jpg\",\n                    \"full_card_name\": \"Eight of Pentacles (REVERSED)\"\n                },\n                {\n                    \"name\": \"King of Cups\",\n                    \"is_upright\": false,\n                    \"image_url\": \"/tarot-cards/images/36.jpg\",\n                    \"full_card_name\": \"King of Cups (REVERSED)\"\n                },\n                ...\n            ]\n        }\n        ```\n    \"\"\"\n    if request.follow_numerology:\n        universe_number = NUMEROLOGY_READER.calculate(request.name, request.dob)[\"personal_numerology\"]\n    else:\n        universe_number = None\n\n    tarot_deck = TarotDeck(seed=universe_number)\n    shuffled_cards = tarot_deck.draw(count=request.count)\n    return CardsAPIResponse(cards=shuffled_cards)\n</code></pre>"},{"location":"tarot-cards/#index.get_card_info","title":"get_card_info","text":"<pre><code>get_card_info(card_number: int) -&gt; CardInfoAPIResponse\n</code></pre> Method Path Description <code>GET</code> <code>/tarot-cards/get-card-info</code> Get card info by number PARAMETER DESCRIPTION <code>card_number</code> <p>The card number (Range: 1-78).</p> <p> TYPE: <code>int</code> </p> RETURNS DESCRIPTION <code>CardInfoAPIResponse</code> <p>The response object containing the card info.</p> <p> TYPE: <code>CardInfoAPIResponse</code> </p> <p>Note</p> <p>This function uses the <code>TarotDeck</code> class to get the card info.</p> <p>Example Response</p> <pre><code>{\n    \"name\": \"The Fool\",\n    \"number\": \"1\",\n    \"arcana\": \"The Fool\",\n    \"suit\": \"Major Arcana\",\n    \"image_url\": \"/tarot-cards/images/1.jpg\",\n    \"fortune_telling\": [\"...\"],\n    \"keywords\": [\"...\"],\n    \"meanings\": {...},\n    \"archetype\": \"...\",\n    \"hebrew_alphabet\": \"...\",\n    \"numerology\": \"...\",\n    \"elemental\": \"...\",\n    \"mythical_spiritual\": \"...\",\n    \"questions_to_ask\": [\"...\"]\n}\n</code></pre> Source code in <code>api/index.py</code> <pre><code>@app.get(\"/tarot-cards/get-card-info\", response_model=CardInfoAPIResponse, tags=[\"Tarot Cards API\"])\ndef get_card_info(card_number: int) -&gt; CardInfoAPIResponse:\n    \"\"\"\n    | Method | Path                                  | Description                                 |\n    | ------ | ------------------------------------- | ------------------------------------------- |\n    | `GET`  | `/tarot-cards/get-card-info`          | Get card info by number                     |\n\n    Params:\n        card_number (int): The card number (Range: 1-78).\n\n    Returns:\n        CardInfoAPIResponse: The response object containing the card info.\n\n    !!! note\n        This function uses the `TarotDeck` class to get the card info.\n\n    !!! example \"Example Response\"\n\n        ```json\n        {\n            \"name\": \"The Fool\",\n            \"number\": \"1\",\n            \"arcana\": \"The Fool\",\n            \"suit\": \"Major Arcana\",\n            \"image_url\": \"/tarot-cards/images/1.jpg\",\n            \"fortune_telling\": [\"...\"],\n            \"keywords\": [\"...\"],\n            \"meanings\": {...},\n            \"archetype\": \"...\",\n            \"hebrew_alphabet\": \"...\",\n            \"numerology\": \"...\",\n            \"elemental\": \"...\",\n            \"mythical_spiritual\": \"...\",\n            \"questions_to_ask\": [\"...\"]\n        }\n        ```\n    \"\"\"\n    if not 1 &lt;= card_number &lt;= 78:\n        raise HTTPException(status_code=400, detail=\"Card number must be between 1 and 78\")\n\n    tarot_deck = TarotDeck()\n    card_info = tarot_deck.get_card_info(card_number)\n    return CardInfoAPIResponse(**card_info)\n</code></pre>"},{"location":"tarot-cards/#models-reference","title":"Models Reference","text":""},{"location":"tarot-cards/#models.TarotCard","title":"TarotCard  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"is_upright\": {\n      \"title\": \"Is Upright\",\n      \"type\": \"boolean\"\n    },\n    \"image_url\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Image Url\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"is_upright\"\n  ],\n  \"title\": \"TarotCard\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>is_upright</code>                 (<code>bool</code>)             </li> <li> <code>image_url</code>                 (<code>Optional[str]</code>)             </li> </ul>"},{"location":"tarot-cards/#models.CardsAPIRequest","title":"CardsAPIRequest  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"dob\": {\n      \"title\": \"Dob\",\n      \"type\": \"string\"\n    },\n    \"count\": {\n      \"default\": 10,\n      \"title\": \"Count\",\n      \"type\": \"integer\"\n    },\n    \"follow_numerology\": {\n      \"default\": false,\n      \"title\": \"Follow Numerology\",\n      \"type\": \"boolean\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"dob\"\n  ],\n  \"title\": \"CardsAPIRequest\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>dob</code>                 (<code>str</code>)             </li> <li> <code>count</code>                 (<code>int</code>)             </li> <li> <code>follow_numerology</code>                 (<code>bool</code>)             </li> </ul> <p>Validators:</p> <ul> <li> <code>validate_dob_format</code>                 \u2192                   <code>dob</code> </li> </ul>"},{"location":"tarot-cards/#models.CardsAPIResponse","title":"CardsAPIResponse  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"TarotCard\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"is_upright\": {\n          \"title\": \"Is Upright\",\n          \"type\": \"boolean\"\n        },\n        \"image_url\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Image Url\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"is_upright\"\n      ],\n      \"title\": \"TarotCard\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"cards\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/TarotCard\"\n      },\n      \"title\": \"Cards\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"cards\"\n  ],\n  \"title\": \"CardsAPIResponse\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>cards</code>                 (<code>List[TarotCard]</code>)             </li> </ul>"},{"location":"tarot-cards/#models.CardInfoAPIResponse","title":"CardInfoAPIResponse  <code>pydantic-model</code>","text":"Show JSON schema: <pre><code>{\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    },\n    \"number\": {\n      \"title\": \"Number\",\n      \"type\": \"string\"\n    },\n    \"arcana\": {\n      \"title\": \"Arcana\",\n      \"type\": \"string\"\n    },\n    \"suit\": {\n      \"title\": \"Suit\",\n      \"type\": \"string\"\n    },\n    \"image_url\": {\n      \"title\": \"Image Url\",\n      \"type\": \"string\"\n    },\n    \"fortune_telling\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Fortune Telling\"\n    },\n    \"keywords\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Keywords\"\n    },\n    \"meanings\": {\n      \"anyOf\": [\n        {\n          \"additionalProperties\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": \"object\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Meanings\"\n    },\n    \"archetype\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Archetype\"\n    },\n    \"hebrew_alphabet\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Hebrew Alphabet\"\n    },\n    \"numerology\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Numerology\"\n    },\n    \"elemental\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Elemental\"\n    },\n    \"mythical_spiritual\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Mythical Spiritual\"\n    },\n    \"questions_to_ask\": {\n      \"anyOf\": [\n        {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"default\": null,\n      \"title\": \"Questions To Ask\"\n    }\n  },\n  \"required\": [\n    \"name\",\n    \"number\",\n    \"arcana\",\n    \"suit\",\n    \"image_url\"\n  ],\n  \"title\": \"CardInfoAPIResponse\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>name</code>                 (<code>str</code>)             </li> <li> <code>number</code>                 (<code>str</code>)             </li> <li> <code>arcana</code>                 (<code>str</code>)             </li> <li> <code>suit</code>                 (<code>str</code>)             </li> <li> <code>image_url</code>                 (<code>str</code>)             </li> <li> <code>fortune_telling</code>                 (<code>Optional[List[str]]</code>)             </li> <li> <code>keywords</code>                 (<code>Optional[List[str]]</code>)             </li> <li> <code>meanings</code>                 (<code>Optional[Dict[str, List[str]]]</code>)             </li> <li> <code>archetype</code>                 (<code>Optional[str]</code>)             </li> <li> <code>hebrew_alphabet</code>                 (<code>Optional[str]</code>)             </li> <li> <code>numerology</code>                 (<code>Optional[str]</code>)             </li> <li> <code>elemental</code>                 (<code>Optional[str]</code>)             </li> <li> <code>mythical_spiritual</code>                 (<code>Optional[str]</code>)             </li> <li> <code>questions_to_ask</code>                 (<code>Optional[List[str]]</code>)             </li> </ul>"}]}